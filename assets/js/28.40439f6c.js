(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{451:function(s,n,t){"use strict";t.r(n);var a=t(24),i=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-const-修饰成员变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-const-修饰成员变量"}},[s._v("#")]),s._v(" 1.const 修饰成员变量")]),s._v(" "),t("div",{staticClass:"language-C++ line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#include<iostream>\nusing namespace std;\nint main(){\n    int a1=3;   ///non-const data\n    const int a2=a1;    ///const data\n\n    int * a3 = &a1;   ///non-const data,non-const pointer\n    const int * a4 = &a1;   ///const data,non-const pointer\n    int * const a5 = &a1;   ///non-const data,const pointer\n    int const * const a6 = &a1;   ///const data,const pointer\n    const int * const a7 = &a1;   ///const data,const pointer\n\n    return 0;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("const修饰指针变量时")]),s._v(" "),t("ul",[t("li",[s._v("只有一个const，如果const位于*左侧，表示指针所指数据是常量，不能通过解引用修改该数据；指针本身是变量，可以指向其他的内存单元。")]),s._v(" "),t("li",[s._v("只有一个const，如果const位于*右侧，表示指针本身是常量，不能指向其他内存地址；指针所指的数据可以通过解引用修改。")]),s._v(" "),t("li",[s._v("两个const，*左右各一个，表示指针和指针所指数据都不能修改。")])])]),s._v(" "),t("h2",{attrs:{id:"_2-const修饰函数参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-const修饰函数参数"}},[s._v("#")]),s._v(" 2.const修饰函数参数")]),s._v(" "),t("div",{staticClass:"language-C++ line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("void testModifyConst(const int _x) {\n     _x=5;　　　///编译出错\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"_3-const修饰成员函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-const修饰成员函数"}},[s._v("#")]),s._v(" 3.const修饰成员函数")]),s._v(" "),t("div",{staticClass:"language-C++ line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#include <iostream>\nusing namespace std;\nclass Point{\n    public :\n    Point(int _x):x(_x){}\n\n    void testConstFunction(int _x) const{\n\n        ///错误，在const成员函数中，不能修改任何类成员变量\n        x=_x;\n\n        ///错误，const成员函数不能调用非onst成员函数，因为非const成员函数可以会修改成员变量\n        modify_x(_x);\n    }\n\n    void modify_x(int _x){\n        x=_x;\n    }\n\n    int x;\n};\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("ul",[t("li",[s._v("const修饰的成员函数不能修改任何的成员变量(mutable修饰的变量除外)")]),s._v(" "),t("li",[s._v("const成员函数不能调用非onst成员函数，因为非const成员函数可以会修改成员变量")])])]),s._v(" "),t("h2",{attrs:{id:"_4-const修饰函数返回值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-const修饰函数返回值"}},[s._v("#")]),s._v(" 4.const修饰函数返回值")]),s._v(" "),t("div",{staticClass:"language-C++ line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const int * mallocA(){  ///const data,non-const pointer\n    int *a=new int(2);\n    return a;\n}\n\nint main()\n{\n    const int *a = mallocA();\n    ///int *b = mallocA();  ///编译错误\n    return 0;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("指针传递")]),s._v(" "),t("p",[s._v("如果返回const data,non-const pointer，返回值也必须赋给const data,non-const pointer。因为指针指向的数据是常量不能修改。")])]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("值传递")]),s._v(" "),t("p",[s._v("如果函数返回值采用“值传递方式”，由于函数会把返回值复制到外部临时的存储单元中，加const 修饰没有任何价值。所以，对于值传递来说，加const没有太多意义。")]),s._v(" "),t("blockquote",[t("p",[s._v("不要把函数int GetInt(void) 写成const int GetInt(void)。\n不要把函数A GetA(void) 写成const A GetA(void)，其中A 为用户自定义的数据类型。")])])])])}),[],!1,null,null,null);n.default=i.exports}}]);